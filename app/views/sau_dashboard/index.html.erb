<% title(t('.page_title')) %>
    <h1 class="govuk-heading-l">
      <%= t('.heading') -%>
    </h1>

<% if auth_user.is_sau_user? %>
    <%= form_with method: :get, local: true do |f| %>
      <div class="govuk-grid-row">
        <div class="govuk-grid-column-one-half">
          <%= f.govuk_select :pa_id, options_for_select([["No filter", ""]] + @authorities, params[:pa_id]),
            label: { text: "Filter by Public Authority"}, class: "sau-filter"
          %>
        </div>
        <div class="govuk-grid-column-one-quarter">
          <%= f.govuk_select :status, options_for_select(select_filter_options(["Accepted", "Pending withdrawal", "Submitted"]), params[:status]),
            label: { text: "Filter by Status" }, class: "sau-filter"
          %>
        </div>
        <div class="govuk-grid-column-one-quarter">
          <%= f.govuk_select :rfi, options_for_select([["No filter", ""],["Received","r"],["Pending","p"]], params[:rfi]),
            label: { text: "RFI" }, class: "sau-filter"
          %>
        </div>
      </div>
      <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
          <div class="govuk-button-group">
            <%= govuk_button_link_to "All requests", all_sau_dashboard_index_path %>
            <%= govuk_button_link_to "Clear filters", sau_dashboard_index_path, secondary: true %>
            <%= f.govuk_submit "Filter", secondary: true, class: "sau-filter-btn" %>
            <%= govuk_button_link_to "Export as Excel", sau_dashboard_index_path(format: :xlsx, status: params[:status], pa_id: params[:pa_id]), secondary: true %>
          </div>
        </div>
      </div>
    <% end %>

<div class="govuk-grid-row">
  <div class="govuk-grid-column-full">
    <%= govuk_table do |table|
      table.with_head do |head|
        head.with_row do |row|
          row.with_cell(header: true, text: 'Reference no.')
          row.with_cell(header: true, text: 'Public Authority')
          row.with_cell(header: true, text: 'Referral type')
          row.with_cell(header: true, text: 'Subsidy scheme name / Beneficiary')
          row.with_cell(header: true, text: 'Status', classes: "app-stack")
          row.with_cell(header: true, text: '', classes: "app-stack")
          row.with_cell(header: true, text: 'Report due', classes: "app-stack")
        end
      end
      if @requests.present?
        table.with_body do |body|
          @requests.each do |request|
            body.with_row do |row|
              row.with_cell do |cell|
                govuk_link_to request.reference_number, sau_request_path(request.id), no_visited_state: true
              end
              row.with_cell(text: request.pa_name)
              row.with_cell(text: referral_type_name(request))
              row.with_cell(text: request.scheme_name.present? ? request.scheme_name : request.beneficiary)
              row.with_cell(text: request.status, classes: "app-stack")
              row.with_cell(classes: "app-stack") do |cell|
                if request.status == "Accepted" && request.internal_state.present?
                  if request.internal_state.include?("info-required")
                    link_to sau_request_path(request.id), class: "govuk-link", title: "Pending" do
                      govuk_tag(text: "RFI", colour: "red") 
                    end
                  elsif request.internal_state.include?("rfi-complete")
                    link_to sau_request_path(request.id), class: "govuk-link", title: "Received" do
                      govuk_tag(text: "RFI", colour: "blue") 
                    end
                  end
                end
              end
              row.with_cell(classes: "app-stack") do |cell| %>
                <%= if request.status == "Accepted" || (request.status == "Pending withdrawal" && request.internal_state.include?("Accepted"))
                      if request.report_due_date.present?
                        govuk_tag(text: request.report_due_date.strftime("%d/%m/%y"), colour: date_colour(request.report_due_date))
                      else
                          govuk_tag(text: "No Date", colour: "red")
                      end
                  # elsif request.submitted_date.present?
                    # govuk_tag(text: request.submitted_date.strftime("%d/%m/%y"), colour: date_colour(request.submitted_date.days_since(7))) 
                    else
                      ""
                    end  %>                 
              <% end
            end
          end
        end
      end
    end
%>

  </div>
</div>
<% end %>